- hosts: localhost
  gather_facts: true
  become: true
  become_user: "{{ username }}"

  pre_tasks:
    - name: update repositories
      become_user: root
      apt: update_cache=yes
      changed_when: false

  roles:
    - role: geerlingguy.docker
      become_user: root
      docker_install_compose: false
      docker_install_compose_plugin: true
      docker_compose_package: docker-compose-plugin
      docker_compose_package_state: present
      docker_users:
        - "{{ username }}"

  tasks:
    - name: general - add nvim unstable repo
      become_user: root
      apt_repository: repo="ppa:neovim-ppa/unstable"

    - name: general - install packages
      become_user: root
      apt: name={{item}}
      with_items:
        - i3
        - stow
        - fzf
        - ripgrep
        - bat
        - curl
        - neovim
        - tree
        - fd-find

    # https://waylonwalker.com/install-rust/
    - name: rust - check if cargo is installed
      shell: command -v cargo
      register: cargo_exists
      ignore_errors: yes
      tags:
        - rust

    - name: rust - download installer
      when: cargo_exists is failed
      get_url:
        url: https://sh.rustup.rs
        dest: /tmp/sh.rustup.rs
        mode: '0755'
        force: 'yes'
      tags:
        - rust

    - name: rust - install rust & cargo
      when: cargo_exists is failed
      shell: /tmp/sh.rustup.rs -y
      tags:
        - rust

    - name: nodejs - install nvm
      ansible.builtin.shell: >
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
      args:
        executable: /bin/bash
        chdir: "$HOME"
        creates: "$HOME/.nvm/nvm.sh"
      tags:
        - nodejs

    - name: nodejs - install node
      become: no
      ansible.builtin.shell: >
        . {{ home_dir }}/.nvm/nvm.sh && nvm install {{ item }} && nvm use {{ item }}
      args:
        executable: /bin/bash
        chdir: "{{ home_dir }}"
        creates: "{{ home_dir }}/.nvm/versions/{{ item }}"
      loop:
        - 16
        - 18
      tags:
        - nodejs

    - name: dotfiles - clone repo
      ansible.builtin.git:
        repo: https://github.com/FilipHarald/dotfiles.git
        dest: "{{ home_dir }}/dotfiles"
      tags:
        - dotfiles

    - name: dotfiles - remove bashrc # this could be optimized
      ansible.builtin.file:
        path: "{{ home_dir }}/.bashrc"
        state: absent
      tags:
        - dotfiles

    - name: dotfiles - run stow
      ansible.builtin.shell:
        cmd: stow -v */
        chdir: "{{ home_dir }}/dotfiles"
      register: stow_result
      changed_when: stow_result.stdout != ""
      tags:
        - dotfiles
